/*
 * 3gpp-network-status-reporting
 *
 * API for reporting network status.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi_ReportingNetworkStatus

import (
	"time"
)

// NetworkStatusReportingSubscription - Represents a subscription to network status information reporting.
type NetworkStatusReportingSubscription struct {

	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	Self string `json:"self,omitempty"`

	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures string `json:"supportedFeatures,omitempty"`

	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NotificationDestination string `json:"notificationDestination"`

	// Set to true by the SCS/AS to request the SCEF to send a test notification as defined in clause 5.2.5.3. Set to false or omitted otherwise.
	RequestTestNotification bool `json:"requestTestNotification,omitempty"`

	WebsockNotifConfig WebsockNotifConfig `json:"websockNotifConfig,omitempty"`

	LocationArea LocationArea `json:"locationArea"`

	// string with format \"date-time\" as defined in OpenAPI.
	TimeDuration time.Time `json:"timeDuration,omitempty"`

	// Identifies a list of congestion level(s) with exact value that the SCS/AS requests to be informed of when reached.
	ThresholdValues []int32 `json:"thresholdValues,omitempty"`

	// Identifies a list of congestion level(s) with abstracted value that the SCS/AS requests to be informed of when reached.
	ThresholdTypes []CongestionType `json:"thresholdTypes,omitempty"`
}
