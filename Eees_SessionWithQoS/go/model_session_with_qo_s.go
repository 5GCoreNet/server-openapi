/*
 * EES Session with QoS API
 *
 * API for EES Session with Qos service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package Eees_SessionWithQoS

// SessionWithQoS - Represents an Individual Session with QoS Subscription.
type SessionWithQoS struct {

	// string providing an URI formatted according to IETF RFC 3986.
	Self string `json:"self,omitempty"`

	// Identifier of an EAS.
	EasId string `json:"easId"`

	// string identifying a Ipv4 address formatted in the \"dotted decimal\" notation as defined in IETF RFC 1166.
	UeIpv4Addr string `json:"ueIpv4Addr,omitempty"`

	// string identifying a Ipv6 address formatted according to clause 4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of IETF RFC 5952 shall not be used.
	UeIpv6Addr string `json:"ueIpv6Addr,omitempty"`

	IpDomain string `json:"ipDomain,omitempty"`

	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	UeId string `json:"ueId,omitempty"`

	// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003.  
	IntGrpId string `json:"intGrpId,omitempty"`

	// String identifying External Group Identifier that identifies a group made up of one or more  subscriptions associated to a group of IMSIs, as specified in clause 19.7.3 of 3GPP TS 23.003.  
	ExtGrpId string `json:"extGrpId,omitempty"`

	// Contains the flow description for the Uplink and/or Downlink IP flows.
	IpFlows []string `json:"ipFlows"`

	// Identifies a pre-defined QoS information.
	QosReference string `json:"qosReference,omitempty"`

	// Identifies an ordered list of pre-defined QoS information. The lower the index of the array for a given entry, the higher the priority. 
	AltQosReference []string `json:"altQosReference,omitempty"`

	// Indicates the events subscribed by the EAS.
	Events []UserPlaneEvent `json:"events,omitempty"`

	SponsorInformation SponsorInformation `json:"sponsorInformation,omitempty"`

	QosMonInfo QosMonitoringInformation `json:"qosMonInfo,omitempty"`

	// string providing an URI formatted according to IETF RFC 3986.
	NotificationDestination string `json:"notificationDestination,omitempty"`

	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn string `json:"dnn,omitempty"`

	Snssai Snssai `json:"snssai,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	MaxbrUl string `json:"maxbrUl,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	MaxbrDl string `json:"maxbrDl,omitempty"`

	DisUeNotif bool `json:"disUeNotif,omitempty"`

	// Set to true by Subscriber to request the EES to send a test notification as defined in 3GPP TS 29.122 [6]. Set to false or omitted otherwise. 
	RequestTestNotification bool `json:"requestTestNotification,omitempty"`

	WebsockNotifConfig WebsockNotifConfig `json:"websockNotifConfig,omitempty"`

	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SuppFeat string `json:"suppFeat,omitempty"`
}
