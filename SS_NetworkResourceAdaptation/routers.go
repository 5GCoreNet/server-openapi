/*
 * SS_NetworkResourceAdaptation
 *
 * SS Network Resource Adaptation Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi_SS_NetworkResourceAdaptation

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/ss-nra/v1/",
		Index,
	},

	{
		"DeleteMulticastSubscription",
		http.MethodDelete,
		"/ss-nra/v1/multicast-subscriptions/:multiSubId",
		DeleteMulticastSubscription,
	},

	{
		"GetMulticastSubscription",
		http.MethodGet,
		"/ss-nra/v1/multicast-subscriptions/:multiSubId",
		GetMulticastSubscription,
	},

	{
		"DeleteTscStream",
		http.MethodDelete,
		"/ss-nra/v1/tsc-streams/:valStreamId",
		DeleteTscStream,
	},

	{
		"GetTscStreamData",
		http.MethodGet,
		"/ss-nra/v1/tsc-streams/:valStreamId",
		GetTscStreamData,
	},

	{
		"DeleteUnicastSubscription",
		http.MethodDelete,
		"/ss-nra/v1/unicast-subscriptions/:uniSubId",
		DeleteUnicastSubscription,
	},

	{
		"GetUnicastSubscription",
		http.MethodGet,
		"/ss-nra/v1/unicast-subscriptions/:uniSubId",
		GetUnicastSubscription,
	},

	{
		"CreateMulticastSubscription",
		http.MethodPost,
		"/ss-nra/v1/multicast-subscriptions",
		CreateMulticastSubscription,
	},

	{
		"GetTscStreamAvailability",
		http.MethodGet,
		"/ss-nra/v1/tsc-stream-availability",
		GetTscStreamAvailability,
	},

	{
		"PutTscStream",
		http.MethodPut,
		"/ss-nra/v1/tsc-streams/:valStreamId",
		PutTscStream,
	},

	{
		"GetTscStream",
		http.MethodGet,
		"/ss-nra/v1/tsc-streams",
		GetTscStream,
	},

	{
		"CreateUnicastSubscription",
		http.MethodPost,
		"/ss-nra/v1/unicast-subscriptions",
		CreateUnicastSubscription,
	},
}
