/*
 * Namf_Communication
 *
 * AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package Namf_Communication

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/namf-comm/v1/",
		Index,
	},

	{
		"AMFStatusChangeSubscribeModfy",
		http.MethodPut,
		"/namf-comm/v1/subscriptions/:subscriptionId",
		AMFStatusChangeSubscribeModfy,
	},

	{
		"AMFStatusChangeUnSubscribe",
		http.MethodDelete,
		"/namf-comm/v1/subscriptions/:subscriptionId",
		AMFStatusChangeUnSubscribe,
	},

	{
		"CancelRelocateUEContext",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/cancel-relocate",
		CancelRelocateUEContext,
	},

	{
		"CreateUEContext",
		http.MethodPut,
		"/namf-comm/v1/ue-contexts/:ueContextId",
		CreateUEContext,
	},

	{
		"EBIAssignment",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/assign-ebi",
		EBIAssignment,
	},

	{
		"RegistrationStatusUpdate",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/transfer-update",
		RegistrationStatusUpdate,
	},

	{
		"ReleaseUEContext",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/release",
		ReleaseUEContext,
	},

	{
		"RelocateUEContext",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/relocate",
		RelocateUEContext,
	},

	{
		"UEContextTransfer",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/transfer",
		UEContextTransfer,
	},

	{
		"N1N2MessageUnSubscribe",
		http.MethodDelete,
		"/namf-comm/v1/ue-contexts/:ueContextId/n1-n2-messages/subscriptions/:subscriptionId",
		N1N2MessageUnSubscribe,
	},

	{
		"N1N2MessageTransfer",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/n1-n2-messages",
		N1N2MessageTransfer,
	},

	{
		"N1N2MessageSubscribe",
		http.MethodPost,
		"/namf-comm/v1/ue-contexts/:ueContextId/n1-n2-messages/subscriptions",
		N1N2MessageSubscribe,
	},

	{
		"NonUeN2InfoUnSubscribe",
		http.MethodDelete,
		"/namf-comm/v1/non-ue-n2-messages/subscriptions/:n2NotifySubscriptionId",
		NonUeN2InfoUnSubscribe,
	},

	{
		"NonUeN2MessageTransfer",
		http.MethodPost,
		"/namf-comm/v1/non-ue-n2-messages/transfer",
		NonUeN2MessageTransfer,
	},

	{
		"NonUeN2InfoSubscribe",
		http.MethodPost,
		"/namf-comm/v1/non-ue-n2-messages/subscriptions",
		NonUeN2InfoSubscribe,
	},

	{
		"AMFStatusChangeSubscribe",
		http.MethodPost,
		"/namf-comm/v1/subscriptions",
		AMFStatusChangeSubscribe,
	},
}
